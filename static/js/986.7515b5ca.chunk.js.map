{"version":3,"file":"static/js/986.7515b5ca.chunk.js","mappings":"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","sources":["component/common/Alert.tsx","component/common/Button.tsx","component/common/Form.tsx","component/common/Input.tsx","component/Note.tsx","component/CardNote.tsx","pages/todo-list.tsx"],"sourcesContent":["import React, {useContext, useEffect, useState} from 'react'\r\nimport {AuthContext} from \"../../context/AuthContext\";\r\nimport {TodoListContext} from \"../../context/TodoLitsContext\";\r\n\r\ntype AlertProps = {\r\n  color?:string,\r\n}\r\n\r\nexport default function Alert(props:AlertProps) {\r\n  const {stateAuth, RemoveError : RAuth } = useContext(AuthContext)\r\n  const {stateTodoList, RemoveError : RTodo } = useContext(TodoListContext)\r\n  const [visible, setVisible] = useState(false)\r\n  const [message, setMessage] = useState(\"\")\r\n  \r\n  const disableMessage = () =>{\r\n    setVisible(false);RAuth();RTodo()\r\n  }\r\n  \r\n  const validError = () =>{\r\n    if(stateAuth.errorMessage.length > 0){\r\n      setMessage(stateAuth.errorMessage)\r\n      setVisible(true)\r\n      //setTimeout(disableMessage,5000)\r\n    }else if (stateTodoList.errorMessage.length > 0){\r\n      setMessage(stateTodoList.errorMessage)\r\n      setVisible(true)\r\n      //setTimeout(()=>disableMessage,5000)\r\n    }\r\n    setTimeout(()=>setVisible(false),5000)\r\n  }\r\n  \r\n  useEffect(()=>{\r\n    validError()\r\n  }, [stateTodoList, stateAuth])\r\n  \r\n  useEffect(() => {\r\n    setTimeout(() => { setVisible(false) }, 2000)\r\n  }, [])\r\n  \r\n  return (\r\n    <div className={`alert alert-danger text-center ${visible==false && \" d-none\"}`} role=\"alert\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n","import React, {ButtonHTMLAttributes, useRef} from 'react'\r\n\r\ntype ButtonProps ={\r\n  type?: \"button\" | \"submit\" | \"reset\" | undefined\r\n  onSubmit?: any,\r\n  text: string,\r\n  color:string,\r\n  small?: boolean\r\n  [x: string]: any;\r\n}\r\n\r\nexport default function Button(props: ButtonProps) {\r\n  const {type, onSubmit, text, color, small, ...otherProps} = props\r\n  \r\n  const buttonRef = useRef(null)\r\n  \r\n  return (\r\n    <button type={type} onSubmit={()=>onSubmit}\r\n            {...otherProps} ref={buttonRef}\r\n            className={`btn btn-${color} ${small && \"btn-sm\"}`}>{text}</button>\r\n  )\r\n}\r\n","import Button from \"./Button\";\r\nimport React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {FieldValues, FormProvider, UseFormReturn} from \"react-hook-form\";\r\n\r\ntype FormProps = {\r\n  formMethods: UseFormReturn<any, any>,\r\n  id: string,\r\n  onSubmit: Function,\r\n  btnText: string,\r\n  children: JSX.Element | JSX.Element[],\r\n  close?:boolean\r\n  onSubmitClose?: Function,\r\n}\r\n\r\nexport default function Form(props:FormProps){\r\n  const {formMethods, id, onSubmit, btnText,\r\n    children, close, onSubmitClose} = props\r\n  \r\n  return(\r\n    <FormProvider {...formMethods}>\r\n      <form id={id}\r\n            onSubmit={formMethods.handleSubmit\r\n            ((data: FieldValues)=>onSubmit(data))}>\r\n        {children}\r\n        {<Button\r\n          type=\"submit\"\r\n          text={btnText}\r\n          color={\"primary m-2\"}\r\n          key ={\"sucess\"}\r\n        />}\r\n        {close && <Button\r\n          type={\"button\"} color={\"secondary\"}\r\n          onClick={onSubmitClose}\r\n          className = {\"m-2\"}\r\n          text ={\"cancel\"} key ={\"cancel\"}/>}\r\n      </form>\r\n    </FormProvider>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport {useFormContext} from \"react-hook-form\";\r\n\r\ntype InputProps = {\r\n  type: string,\r\n  label?:string,\r\n  id:string,\r\n  name:string,\r\n  defaultValue?: any\r\n  placeholder?:string\r\n  textArea?:boolean\r\n}\r\n\r\nexport default function Input(props: InputProps) {\r\n  const { type, label, id, name, defaultValue, placeholder, textArea } = props\r\n  const { register, formState: { errors } } = useFormContext();\r\n  return (\r\n    <div className={label?\"mb-3\": \"\"}>\r\n      {label&&<label htmlFor={id} className={\"form-label\"}>{label}</label>}\r\n      {!textArea?<input id={id} className={`form-control ${placeholder&& \" border-0\"}`} {...register(String(name))}\r\n              type={type} name={name} defaultValue={defaultValue} placeholder={placeholder}\r\n      />:\r\n        <textarea id={id} className={\"mt-2 form-control border-0\"} {...register(String(name))}\r\n        name={name} defaultValue={defaultValue} placeholder={placeholder}/>}\r\n      {errors[id] &&\r\n          <span className=\"d-block text-left\" >\r\n            {\"Llene el campo\"}\r\n          </span>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n","import React, {useContext} from \"react\";\r\nimport Button from \"./common/Button\";\r\nimport {TodoListContext} from \"../context/TodoLitsContext\";\r\n\r\ntype NoteProps ={\r\n  id: number\r\n  title: string\r\n  description: string\r\n}\r\n\r\nexport default function Note(props: NoteProps){\r\n  \r\n  const {id, description, title} = props\r\n  const {Delete} = useContext(TodoListContext)\r\n  \r\n  return(\r\n    <div key={id} className={\"card border p-3 m-2 b-2\"}\r\n      style={{cursor: \"pointer\"}}>\r\n      <h3>{title}</h3>\r\n      <p>{description}</p>\r\n      <Button text={\"Borrar\"} color={\"danger\"}\r\n              small onClick={() => Delete(id)}/>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useContext} from \"react\";\r\nimport Form from \"./common/Form\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport Input from \"./common/Input\";\r\nimport {TodoListContext} from \"../context/TodoLitsContext\";\r\n\r\nexport default function CardNote({cancel}:any){\r\n  \r\n  const {Add} = useContext(TodoListContext)\r\n  \r\n  const formMethods = useForm({mode:\"onBlur\", defaultValues:{\r\n      title: '',\r\n      description: ''\r\n    }})\r\n  \r\n  const children = <>\r\n    <Input placeholder={\"Titulo\"} id={\"title\"}\r\n           name={\"title\"}  type = {\"text\"}/>\r\n    <Input placeholder={\"Descripcion\"} id={\"description\"}\r\n           name={\"description\"}  type={\"text\"} textArea/>\r\n  </>\r\n  return(\r\n    <Form formMethods={formMethods} id={\"formTodoList\"} close onSubmitClose = {cancel}\r\n          onSubmit={Add} btnText={\"Guardar\"} children={children}/>\r\n  )\r\n}\r\n","import React, {useContext, useEffect, useState} from \"react\";\r\nimport {TodoListContext} from \"../context/TodoLitsContext\";\r\nimport Note from \"../component/Note\";\r\nimport CardNote from \"../component/CardNote\";\r\nimport Alert from \"../component/common/Alert\";\r\nimport Button from \"../component/common/Button\";\r\nimport {AuthContext} from \"../context/AuthContext\";\r\n\r\nexport default function TodoList(){\r\n  \r\n  const {todoList, getAll} = useContext(TodoListContext)\r\n  const {logOut} = useContext(AuthContext)\r\n  \r\n  const [register, setRegister] = useState(false)\r\n  \r\n  useEffect(()=>{\r\n    getAll()\r\n  },[])\r\n  \r\n  useEffect(()=>{\r\n    setRegister(false)\r\n  }, [todoList])\r\n  \r\n  return(\r\n    <div className={\"container-sm p-5 b-5 \"}>\r\n      <Button text={\"Salir\"} color={\"danger\"} onClick={logOut}/>\r\n      <Alert/>\r\n      <div className={\"row justify-content-center p-5 m-3\"}>\r\n        {!register?<input className={\"form-control  border-1\"}\r\n                placeholder={\"Crea una nota...\"}\r\n                onClick={() => setRegister(true)}/> : <CardNote cancel = {()=>setRegister(false)}/>}\r\n      </div>\r\n      \r\n      <div className={\"row justify-content-center\"}>\r\n        {todoList.map(({id, title,description}, index)=>\r\n          <div key={index}  className={\"col\"}>\r\n            <Note key={index} id={id} title={title} description={description}/>\r\n          </div>)}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":["Alert","props","_useContext","useContext","AuthContext","stateAuth","_useContext2","RemoveError","TodoListContext","stateTodoList","_useState","useState","_useState2","_slicedToArray","visible","setVisible","_useState3","_useState4","message","setMessage","useEffect","errorMessage","length","setTimeout","_jsx","className","concat","role","children","Button","type","onSubmit","text","color","small","otherProps","_objectWithoutProperties","_excluded","buttonRef","useRef","_objectSpread","ref","Form","formMethods","id","btnText","close","onSubmitClose","FormProvider","_jsxs","handleSubmit","data","onClick","Input","label","name","defaultValue","placeholder","textArea","_useFormContext","useFormContext","register","errors","formState","htmlFor","String","Note","description","title","Delete","style","cursor","CardNote","_ref","cancel","Add","useForm","mode","defaultValues","_Fragment","TodoList","todoList","getAll","logOut","setRegister","map","index"],"sourceRoot":""}