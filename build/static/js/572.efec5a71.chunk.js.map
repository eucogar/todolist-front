{"version":3,"file":"static/js/572.efec5a71.chunk.js","mappings":"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","sources":["component/LayoutUser.tsx","component/common/Alert.tsx","component/common/Button.tsx","component/common/Form.tsx","component/common/Input.tsx","pages/register.tsx"],"sourcesContent":["import React from \"react\";\r\n\r\nexport default function LayoutUser({children}: {children: JSX.Element | JSX.Element[]}){\r\n\r\n  return(\r\n    <div className={\"d-flex vh-100 justify-content-center align-items-center\"}>\r\n      <div className={\"row justify-content-md-center\"}>\r\n        <div className=\"card p-5 mb-3\" style={{width: \"30rem\"}}>\r\n          {children}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useContext, useEffect, useState} from 'react'\r\nimport {AuthContext} from \"../../context/AuthContext\";\r\nimport {TodoListContext} from \"../../context/TodoLitsContext\";\r\n\r\ntype AlertProps = {\r\n  color?:string,\r\n}\r\n\r\nexport default function Alert(props:AlertProps) {\r\n  const {stateAuth, RemoveError : RAuth } = useContext(AuthContext)\r\n  const {stateTodoList, RemoveError : RTodo } = useContext(TodoListContext)\r\n  const [visible, setVisible] = useState(false)\r\n  const [message, setMessage] = useState(\"\")\r\n  \r\n  const disableMessage = () =>{\r\n    setVisible(false);RAuth();RTodo()\r\n  }\r\n  \r\n  const validError = () =>{\r\n    if(stateAuth.errorMessage.length > 0){\r\n      setMessage(stateAuth.errorMessage)\r\n      setVisible(true)\r\n      //setTimeout(disableMessage,5000)\r\n    }else if (stateTodoList.errorMessage.length > 0){\r\n      setMessage(stateTodoList.errorMessage)\r\n      setVisible(true)\r\n      //setTimeout(()=>disableMessage,5000)\r\n    }\r\n    setTimeout(()=>setVisible(false),5000)\r\n  }\r\n  \r\n  useEffect(()=>{\r\n    validError()\r\n  }, [stateTodoList, stateAuth])\r\n  \r\n  useEffect(() => {\r\n    setTimeout(() => { setVisible(false) }, 2000)\r\n  }, [])\r\n  \r\n  return (\r\n    <div className={`alert alert-danger text-center ${visible==false && \" d-none\"}`} role=\"alert\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n","import React, {ButtonHTMLAttributes, useRef} from 'react'\r\n\r\ntype ButtonProps ={\r\n  type?: \"button\" | \"submit\" | \"reset\" | undefined\r\n  onSubmit?: any,\r\n  text: string,\r\n  color:string,\r\n  small?: boolean\r\n  [x: string]: any;\r\n}\r\n\r\nexport default function Button(props: ButtonProps) {\r\n  const {type, onSubmit, text, color, small, ...otherProps} = props\r\n  \r\n  const buttonRef = useRef(null)\r\n  \r\n  return (\r\n    <button type={type} onSubmit={()=>onSubmit}\r\n            {...otherProps} ref={buttonRef}\r\n            className={`btn btn-${color} ${small && \"btn-sm\"}`}>{text}</button>\r\n  )\r\n}\r\n","import Button from \"./Button\";\r\nimport React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {FieldValues, FormProvider, UseFormReturn} from \"react-hook-form\";\r\n\r\ntype FormProps = {\r\n  formMethods: UseFormReturn<any, any>,\r\n  id: string,\r\n  onSubmit: Function,\r\n  btnText: string,\r\n  children: JSX.Element | JSX.Element[],\r\n  close?:boolean\r\n  onSubmitClose?: Function,\r\n}\r\n\r\nexport default function Form(props:FormProps){\r\n  const {formMethods, id, onSubmit, btnText,\r\n    children, close, onSubmitClose} = props\r\n  \r\n  return(\r\n    <FormProvider {...formMethods}>\r\n      <form id={id}\r\n            onSubmit={formMethods.handleSubmit\r\n            ((data: FieldValues)=>onSubmit(data))}>\r\n        {children}\r\n        {<Button\r\n          type=\"submit\"\r\n          text={btnText}\r\n          color={\"primary m-2\"}\r\n          key ={\"sucess\"}\r\n        />}\r\n        {close && <Button\r\n          type={\"button\"} color={\"secondary\"}\r\n          onClick={onSubmitClose}\r\n          className = {\"m-2\"}\r\n          text ={\"cancel\"} key ={\"cancel\"}/>}\r\n      </form>\r\n    </FormProvider>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport {useFormContext} from \"react-hook-form\";\r\n\r\ntype InputProps = {\r\n  type: string,\r\n  label?:string,\r\n  id:string,\r\n  name:string,\r\n  defaultValue?: any\r\n  placeholder?:string\r\n  textArea?:boolean\r\n}\r\n\r\nexport default function Input(props: InputProps) {\r\n  const { type, label, id, name, defaultValue, placeholder, textArea } = props\r\n  const { register, formState: { errors } } = useFormContext();\r\n  return (\r\n    <div className={label?\"mb-3\": \"\"}>\r\n      {label&&<label htmlFor={id} className={\"form-label\"}>{label}</label>}\r\n      {!textArea?<input id={id} className={`form-control ${placeholder&& \" border-0\"}`} {...register(String(name))}\r\n              type={type} name={name} defaultValue={defaultValue} placeholder={placeholder}\r\n      />:\r\n        <textarea id={id} className={\"mt-2 form-control border-0\"} {...register(String(name))}\r\n        name={name} defaultValue={defaultValue} placeholder={placeholder}/>}\r\n      {errors[id] &&\r\n          <span className=\"d-block text-left\" >\r\n            {\"Llene el campo\"}\r\n          </span>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n","import React, {useContext} from \"react\";\r\nimport {AuthContext} from \"../context/AuthContext\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport Input from \"../component/common/Input\";\r\nimport LayoutUser from \"../component/LayoutUser\";\r\nimport Form from \"../component/common/Form\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Alert from \"../component/common/Alert\";\r\n\r\nexport default function Register(){\r\n  const { signUp } = useContext(AuthContext);\r\n  const formMethods = useForm({\r\n    mode: \"onChange\",\r\n    defaultValues: {UserName : \"\", Password : \"\"},\r\n  });\r\n  \r\n  const children = <>\r\n    <Input label={\"Nombre de Usuario\"} id={\"UserName\"}\r\n           name={\"UserName\"}  type = {\"text\"}/>\r\n    <Input label={\"ContraseÃ±a\"} id={\"Password\"}\r\n           name={\"Password\"}   type = {\"password\"}/>\r\n    <NavLink to={\"/\"} title={\"\"}> Login</NavLink>\r\n    <br/>\r\n  </>\r\n  \r\n  return(\r\n    <LayoutUser>\r\n      <Alert/>\r\n      <h3 className={\"p-2 mb-4 text-center\"}>Registrar Usuario</h3>\r\n      <Form formMethods={formMethods} onSubmit={signUp}\r\n            id={\"formLogin\"} children={children}\r\n            btnText={\"Registrarse\"}/>\r\n    </LayoutUser>\r\n  )\r\n}\r\n"],"names":["LayoutUser","_ref","children","_jsx","className","style","width","Alert","props","_useContext","useContext","AuthContext","stateAuth","_useContext2","RemoveError","TodoListContext","stateTodoList","_useState","useState","_useState2","_slicedToArray","visible","setVisible","_useState3","_useState4","message","setMessage","useEffect","errorMessage","length","setTimeout","concat","role","Button","type","onSubmit","text","color","small","otherProps","_objectWithoutProperties","_excluded","buttonRef","useRef","_objectSpread","ref","Form","formMethods","id","btnText","close","onSubmitClose","FormProvider","_jsxs","handleSubmit","data","onClick","Input","label","name","defaultValue","placeholder","textArea","_useFormContext","useFormContext","register","errors","formState","htmlFor","String","Register","signUp","useForm","mode","defaultValues","UserName","Password","_Fragment","NavLink","to","title"],"sourceRoot":""}